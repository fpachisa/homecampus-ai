name: Production Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'learning-platform/**'
      - '.github/workflows/production.yml'
      - 'firebase.json'
      - 'firestore.rules'

  workflow_dispatch:
    inputs:
      skip_tests:
        description: 'Skip tests (use for hotfixes only)'
        required: false
        default: 'false'

env:
  NODE_VERSION: '20'
  WORKING_DIR: ./learning-platform

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    if: github.event.inputs.skip_tests != 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: learning-platform/package-lock.json

      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: npm ci

      - name: Run linter
        working-directory: ${{ env.WORKING_DIR }}
        run: npm run lint

      - name: Run tests
        working-directory: ${{ env.WORKING_DIR }}
        run: npm run test:run

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: learning-platform/coverage/

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    if: |
      always() &&
      (needs.test.result == 'success' || github.event.inputs.skip_tests == 'true')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: learning-platform/package-lock.json

      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: npm ci

      - name: Create environment file
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          cat > .env << EOF
          VITE_GEMINI_API_KEY=${{ secrets.VITE_GEMINI_API_KEY }}
          VITE_CLAUDE_API_KEY=${{ secrets.VITE_CLAUDE_API_KEY }}
          VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_GOOGLE_TTS_API_KEY=${{ secrets.VITE_GOOGLE_TTS_API_KEY }}
          VITE_TTS_PROVIDER=gemini
          VITE_TTS_SPEAKER=callirrhoe
          VITE_EMAIL_COLLECTION=mail
          VITE_FROM_EMAIL=noreply@homecampus.ai
          VITE_FROM_NAME=Home Campus
          VITE_SUPPORT_EMAIL=support@homecampus.ai
          EOF

      - name: Build application
        working-directory: ${{ env.WORKING_DIR }}
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: learning-platform/dist/
          retention-days: 30

  deploy:
    name: Deploy to Firebase Hosting
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: production
      url: https://homecampus.ai

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: production-build
          path: learning-platform/dist/

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          channelId: live
          projectId: homecampus-ai

      - name: Deploy Firestore rules
        uses: w9jds/firebase-action@v13.10.0
        with:
          args: deploy --only firestore:rules
        env:
          GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Notify deployment success
        if: success()
        run: |
          echo "✅ Deployment successful!"
          echo "🌐 Production URL: https://homecampus.ai"
          echo "📊 View deployment: https://console.firebase.google.com/project/homecampus-ai/hosting"
